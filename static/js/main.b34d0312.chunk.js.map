{"version":3,"sources":["register-fa-icons.js","components/common/Login.js","pages/GoogleLoginPage.js","components/common/Profile.js","components/form_inputs/DataForm.js","components/form_inputs/InputContainer.js","components/form_inputs/Input.js","components/common/ActionButton.js","assets/styles/global/Variables.style.js","components/common/modal/CommonModal.js","components/common/Loading.js","components/common/WarningMessage.js","components/common/animations/Animations.js","components/common/video_player/VideoPlayerContainer.js","components/common/video_player/VideoTitle.js","components/common/video_player/VideoLabel.js","contexts/VideosContext.js","components/common/video_player/VideoPlayer.js","components/common/grid/GridContainer.js","components/videos/VideoModalContent.js","components/videos/VideoModal.js","components/common/Button.js","components/videos/FormVideo.js","components/videos/FilterVideos.js","components/videos/SearchVideos.js","components/videos/SelectedVideosList.js","containers/VideosList.js","reducers/videos/VideosReducer.js","reducers/videos/types.js","utils.js","services/GoogleApis.js","states/VideosState.js","pages/VideosListPage.js","assets/styles/global/GlobalStyles.js","App.js","serviceWorker.js","index.js","assets/images/pelando.png","assets/images/pelando-icon.png"],"names":["library","add","faPause","faPlay","faTimes","faPlus","faMinus","faSignOutAlt","faSpinner","LoginContainer","styled","div","Login","withRouter","history","src","Logo","alt","width","className","clientId","redirectUri","scope","buttonText","onSuccess","loginInfo","localStorage","setItem","JSON","stringify","profileObj","accessToken","push","onFailure","toast","error","ProfilePic","img","ProfileInfo","DataForm","onSubmit","children","initialValues","props","defaultProps","InputContainer","Input","label","onChange","useField","field","meta","setFieldValue","useFormikContext","event","name","target","value","htmlFor","ActionButton","button","absolute","left","right","color","BackgroundColor","Color","CommonModal","title","isModalOpen","onCloseModal","isOpen","type","onClick","icon","Loading","size","pulse","WarningMessage","EnterAnimation","posed","enter","y","opacity","delay","transition","stiffness","damping","default","duration","exit","VideoPlayerContainer","VideoTitle","p","VideoLabel","number","videosContext","createContext","VideoPlayer","isPlaying","video","onRemoveVideo","onChangeVideoStatus","index","onAddVideo","isSelected","useContext","VideosContext","selectedVideos","some","selectedVideo","id","url","playing","disabled","get","GridContainer","columns","VideoModalContent","handleAddVideo","handleVideo","loadingVideos","videos","length","map","key","VideoModal","isVideosModalOpen","handleModal","currentBGColor","Button","action","FormVideo","FilterVideos","handleFilter","isFiltering","values","placeholder","SearchVideos","isValueURL","isUrl","getVideos","SelectedVideosList","handleRemoveVideo","animateOnMount","useState","profile","setProfile","useEffect","parse","getItem","imageUrl","email","clear","VideosReducer","state","payload","items","filter","API_HOST","fetchVideosSearch","params","a","axios","res","data","fetchVideos","useReducer","dispatch","localStorageVideos","token","access_token","token_type","expires_in","q","search","part","maxResults","videosData","videosIds","item","videoId","videosParams","join","warn","status","response","debounce","test","normalizeString","normalize","replace","toLowerCase","Provider","handlePlay","handlePause","removeSelectedVideo","filteredVideos","split","includes","VideosListPage","GlobalStyle","createGlobalStyle","App","exact","path","component","GoogleLoginPage","to","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message","module","exports"],"mappings":"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","file":"static/js/main.b34d0312.chunk.js","sourcesContent":["import { library } from '@fortawesome/fontawesome-svg-core';\nimport {\n  faPause,\n  faPlay,\n  faTimes,\n  faPlus,\n  faMinus,\n  faSignOutAlt,\n  faSpinner,\n} from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(\n  faPause,\n  faPlay,\n  faTimes,\n  faPlus,\n  faMinus,\n  faSignOutAlt,\n  faSpinner,\n);\n","import styled from 'styled-components';\n\nexport const LoginContainer = styled.div`\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Login = styled.div`\n  border: 1px solid #eee;\n  width: 500px;\n  min-height: 200px;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  padding: 1rem;\n  box-shadow: 0 4px 6px 0 rgba(0, 0, 0, 0.1);\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport { withRouter } from 'react-router-dom';\nimport { GoogleLogin } from 'react-google-login';\nimport { LoginContainer, Login } from '../components/common/Login';\nimport Logo from '../assets/images/pelando.png';\n\nconst GoogleLoginPage = ({ history }) => {\n  const handleSuccess = (loginInfo) => {\n    localStorage.setItem('profile', JSON.stringify({ ...loginInfo.profileObj }));\n    localStorage.setItem('token', loginInfo.accessToken);\n    history.push('/playando');\n  };\n\n  return (\n    <LoginContainer>\n      <Login>\n        <img src={Logo} alt=\"logo\" width=\"100\" />\n        <div className=\"mt-4\">\n          <h1 className=\"mb-3\">Faça login com sua conta google</h1>\n          <GoogleLogin\n            clientId=\"1015749006092-v6s00reo7n6g74pbshn9t8m9mf0che12.apps.googleusercontent.com\"\n            redirectUri=\"http://localhost:3000, https://victorbf.github.io\"\n            scope=\"profile email https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.readonly https://www.googleapis.com/auth/youtube.upload https://www.googleapis.com/auth/youtubepartner-channel-audit\"\n            buttonText=\"Entrar com sua conta google\"\n            onSuccess={handleSuccess}\n            onFailure={() => toast.error('Ocorreu um erro ao autenticar. Tente novamente.')}\n          />\n        </div>\n      </Login>\n    </LoginContainer>\n  );\n};\n\nGoogleLoginPage.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n};\n\nexport default withRouter(GoogleLoginPage);\n","import styled from 'styled-components';\n\nexport const ProfilePic = styled.img`\n  border-radius: 50%;\n  width: 50px;\n  box-shadow: 0 4px 6px 0 rgba(0, 0, 0, 0.1);\n`;\n\nexport const ProfileInfo = styled.div`\n  @media (max-width: 768px) {\n    display: none;\n  }\n  margin-right: 1.5rem;\n  small {\n    font-weight: 200;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Formik, Form } from 'formik';\n\nconst DataForm = ({\n  onSubmit, children, initialValues, ...props\n}) => (\n  <Formik\n    initialValues={initialValues}\n    onSubmit={onSubmit}\n  >\n    <Form\n      {...props}\n    >\n      {children}\n    </Form>\n  </Formik>\n);\n\nDataForm.propTypes = {\n  initialValues: PropTypes.objectOf(PropTypes.array),\n  onSubmit: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nDataForm.defaultProps = {\n  initialValues: {},\n};\n\nexport default DataForm;\n","import styled from 'styled-components';\n\nconst InputContainer = styled.div`\n  width: 100%;\n\n  input {\n    border: 1px solid #eee;\n    border-radius: 3px;\n    width: 100%;\n    padding: 0.3rem 0.5rem;\n    font-size: 14px;\n  }\n`;\n\nexport default InputContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useField, useFormikContext } from 'formik';\nimport InputContainer from './InputContainer';\n\nconst Input = ({\n  label, className, onChange, ...props\n}) => {\n  const [field, meta] = useField(props);\n  const { setFieldValue } = useFormikContext();\n\n  return (\n    <InputContainer>\n      <div>\n        <input\n          {...field}\n          {...props}\n          onChange={(event) => {\n            setFieldValue(field.name, event.target.value);\n            if (onChange) {\n              onChange(event.target.value);\n            }\n          }}\n        />\n        <label\n          htmlFor={field.name}\n        >\n          {label}\n        </label>\n      </div>\n      {meta.error && <span>{meta.error}</span>}\n    </InputContainer>\n  );\n};\n\nInput.propTypes = {\n  onChange: PropTypes.func,\n  label: PropTypes.string,\n  className: PropTypes.string,\n};\n\nInput.defaultProps = {\n  onChange: null,\n  label: '',\n  className: '',\n};\n\nexport default Input;\n","import styled from 'styled-components';\nimport {\n  PrimaryColor, SecondaryColor, White,\n  FontColor, SuccessColor,\n} from '../../assets/styles/global/Variables.style';\n\nconst BackgroundColor = (color) => {\n  switch (color) {\n    case 'primary':\n      return PrimaryColor;\n    case 'success':\n      return SuccessColor;\n    default:\n      return SecondaryColor;\n  }\n};\n\nconst Color = (color) => {\n  switch (color) {\n    case 'primary':\n      return White;\n    case 'success':\n      return White;\n    default:\n      return FontColor;\n  }\n};\n\nconst ActionButton = styled.button`\n  border-radius: 50%;\n  position: ${(props) => (props.absolute ? 'absolute' : 'inherit')};\n  left: ${(props) => (props.left ? '20px' : 'inherit')};\n  right: ${(props) => (props.right ? '20px' : 'inherit')};\n  bottom: 3rem;\n  box-shadow: 0 4px 6px 0 rgba(0, 0, 0, 0.1);\n  background: ${(props) => BackgroundColor(props.color)};\n  width: 40px;\n  height: 40px;\n  color: ${(props) => Color(props.color)};\n\n  &:disabled {\n    opacity: 0.5;\n  }\n`;\n\nexport default ActionButton;\n","export const LightGray = '#E2E8F0';\nexport const LightBlack = '#333333';\nexport const LightGreen = '#99CC33';\nexport const DarkYellow = '#FFCC00';\nexport const DarkRed = '#CC3300';\nexport const DarkOrange = '#CC6100';\nexport const White = '#FFFFFF';\n\n// Color hierarchy\nexport const FontColor = LightBlack;\nexport const PrimaryColor = DarkOrange;\nexport const SecondaryColor = LightGray;\nexport const DangerColor = DarkRed;\nexport const WarningColor = DarkYellow;\nexport const SuccessColor = LightGreen;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Modal from 'react-modal';\nimport ActionButton from '../ActionButton';\n\nconst CommonModal = ({\n  title,\n  children,\n  isModalOpen,\n  onCloseModal,\n}) => (\n  <Modal\n    isOpen={isModalOpen}\n  >\n    {title && (\n    <div className=\"flex justify-between items-center\">\n      <h2>{title}</h2>\n      <ActionButton\n        type=\"button\"\n        onClick={onCloseModal}\n      >\n        <FontAwesomeIcon icon=\"times\" />\n      </ActionButton>\n    </div>\n    )}\n    <div className=\"mt-3\">\n      {children}\n    </div>\n  </Modal>\n);\n\nCommonModal.propTypes = {\n  title: PropTypes.string,\n  isModalOpen: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n  onCloseModal: PropTypes.func.isRequired,\n};\n\nCommonModal.defaultProps = {\n  title: '',\n  isModalOpen: false,\n};\n\nexport default CommonModal;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\n\nconst Loading = () => (\n  <div className=\"flex items-center justify-center h-screen\">\n    <FontAwesomeIcon className=\"text-orange-600\" size=\"3x\" icon=\"spinner\" pulse />\n  </div>\n);\n\nexport default Loading;\n","import styled from 'styled-components';\n\nconst WarningMessage = styled.div`\n  margin-top: 2rem;\n  text-align: center;\n  font-size: 22px;\n  letter-spacing: 1px;\n  font-weight: 600;\n`;\n\nexport default WarningMessage;\n","import posed from 'react-pose';\n\nconst EnterAnimation = posed.div({\n  enter: {\n    y: 0,\n    opacity: 1,\n    delay: 300,\n    transition: {\n      y: { type: 'spring', stiffness: 1000, damping: 15 },\n      default: { duration: 300 },\n    },\n  },\n  exit: {\n    y: 50,\n    opacity: 0,\n    transition: { duration: 150 },\n  },\n});\n\nexport default EnterAnimation;\n","import styled from 'styled-components';\n\nconst VideoPlayerContainer = styled.div`\n  position: relative;\n  box-shadow: 0 4px 6px 0 rgba(0, 0, 0, 0.1);\n`;\n\n\nexport default VideoPlayerContainer;\n","import styled from 'styled-components';\n\nconst VideoTitle = styled.p`\n  text-overflow: ellipsis;\n  overflow: hidden; \n  width: 400px;\n  height: 1.4em; \n  white-space: nowrap;\n`;\n\nexport default VideoTitle;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport VideoTitle from './VideoTitle';\n\nconst VideoLabel = ({ number, label }) => (\n  <div className=\"font-bold mt-4 p-3\">\n    <VideoTitle>\n      <span className=\"text-orange-600 mr-2\">\n        {number}\n        .\n      </span>\n      {label}\n    </VideoTitle>\n  </div>\n);\n\nVideoLabel.propTypes = {\n  number: PropTypes.number.isRequired,\n  label: PropTypes.string.isRequired,\n};\n\nexport default VideoLabel;\n","import { createContext } from 'react';\n\nconst videosContext = createContext();\n\nexport default videosContext;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { get } from 'lodash';\nimport ReactPlayer from 'react-player';\nimport EnterAnimation from '../animations/Animations';\nimport VideoPlayerContainer from './VideoPlayerContainer';\nimport ActionButton from '../ActionButton';\nimport VideoLabel from './VideoLabel';\nimport VideosContext from '../../../contexts/VideosContext';\n\nconst VideoPlayer = ({\n  isPlaying, video, onRemoveVideo,\n  onChangeVideoStatus, index, onAddVideo,\n  ...props\n}) => {\n  const { selectedVideos } = useContext(VideosContext);\n  const isSelected = selectedVideos.some((selectedVideo) => selectedVideo.id === video.id);\n  return (\n    <EnterAnimation {...props}>\n      <VideoPlayerContainer>\n        <ReactPlayer\n          url={`https://www.youtube.com/watch?v=${video.id}`}\n          playing={isPlaying === video.id}\n          width=\"250\"\n        />\n        <ActionButton\n          left\n          absolute\n          color=\"primary\"\n          type=\"button\"\n          onClick={() => onChangeVideoStatus(isPlaying === video.id ? null : video.id)}\n        >\n          {isPlaying === video.id ? (\n            <FontAwesomeIcon icon=\"pause\" />\n          ) : (\n            <FontAwesomeIcon icon=\"play\" />\n          )}\n        </ActionButton>\n        {\n      onRemoveVideo\n        ? (\n          <ActionButton\n            right\n            absolute\n            type=\"button\"\n            onClick={() => onRemoveVideo(video)}\n          >\n            <FontAwesomeIcon icon=\"times\" />\n          </ActionButton>\n        ) : (\n          <ActionButton\n            right\n            absolute\n            color=\"success\"\n            type=\"button\"\n            onClick={() => onAddVideo(video)}\n            disabled={isSelected}\n          >\n            <FontAwesomeIcon icon={isSelected ? 'minus' : 'plus'} />\n          </ActionButton>\n        )\n    }\n        <VideoLabel\n          number={index}\n          label={get(video, 'snippet.title')}\n        />\n      </VideoPlayerContainer>\n    </EnterAnimation>\n  );\n};\n\nVideoPlayer.propTypes = {\n  isPlaying: PropTypes.string,\n  video: PropTypes.objectOf(PropTypes.any).isRequired,\n  onRemoveVideo: PropTypes.func,\n  onChangeVideoStatus: PropTypes.func.isRequired,\n  index: PropTypes.number.isRequired,\n  onAddVideo: PropTypes.func,\n};\n\nVideoPlayer.defaultProps = {\n  isPlaying: null,\n  onRemoveVideo: null,\n  onAddVideo: () => {},\n};\n\nexport default VideoPlayer;\n","import styled from 'styled-components';\n\nconst GridContainer = styled.div`\n  display: grid;\n  grid-gap: 1rem;\n  grid-template-columns: repeat(${(props) => props.columns}, 1fr);\n  @media (max-width: 768px) {\n    grid-template-columns: repeat(1, 1fr);\n  }\n`;\n\nexport default GridContainer;\n","import React, { useContext } from 'react';\nimport { PoseGroup } from 'react-pose';\nimport Loading from '../common/Loading';\nimport WarningMessage from '../common/WarningMessage';\nimport VideoPlayer from '../common/video_player/VideoPlayer';\nimport GridContainer from '../common/grid/GridContainer';\nimport VideosContext from '../../contexts/VideosContext';\n\nconst VideoModalContent = () => {\n  const {\n    isPlaying, handleAddVideo, handleVideo,\n    loadingVideos, videos,\n  } = useContext(VideosContext);\n\n  if (loadingVideos) {\n    return (\n      <Loading />\n    );\n  }\n\n  if (videos.length === 0) {\n    return (\n      <WarningMessage>Nenhum Vídeo encontrado :C</WarningMessage>\n    );\n  }\n\n  return (\n    <GridContainer\n      columns=\"2\"\n    >\n      <PoseGroup>\n        {videos.map((video, index) => (\n          <VideoPlayer\n            key={video.id}\n            index={index + 1}\n            isPlaying={isPlaying}\n            video={video}\n            onAddVideo={handleAddVideo}\n            onChangeVideoStatus={handleVideo}\n          />\n        ))}\n      </PoseGroup>\n    </GridContainer>\n  );\n};\n\nexport default VideoModalContent;\n","import React, { useContext } from 'react';\nimport CommonModal from '../common/modal/CommonModal';\nimport VideoModalContent from './VideoModalContent';\nimport VideosContext from '../../contexts/VideosContext';\n\nconst VideoModal = () => {\n  const {\n    isVideosModalOpen, handleModal,\n  } = useContext(VideosContext);\n\n  return (\n    <CommonModal\n      title=\"Selecione os vídeos que deseja salvar\"\n      isModalOpen={isVideosModalOpen}\n      onCloseModal={handleModal}\n    >\n      <VideoModalContent />\n    </CommonModal>\n  );\n};\n\nexport default VideoModal;\n","import styled from 'styled-components';\nimport {\n  PrimaryColor, SecondaryColor, White,\n  DangerColor, WarningColor, SuccessColor,\n} from '../../assets/styles/global/Variables.style';\n\nconst currentBGColor = (props) => {\n  switch (props) {\n    case 'primary':\n      return PrimaryColor;\n    case 'danger':\n      return DangerColor;\n    case 'warning':\n      return WarningColor;\n    case 'success':\n      return SuccessColor;\n    default:\n      return SecondaryColor;\n  }\n};\n\nconst Button = styled.button`\n  background: ${(props) => currentBGColor(props.action)};\n  color: ${(props) => props.action && White};\n  padding: 0.3rem 0;\n  height: 100%;\n  border: 1px solid ${(props) => currentBGColor(props.action)};\n  box-shadow: 0px 3px 1px -2px rgba(0,0,0,0.2), 0px 2px 2px 0px rgba(0,0,0,0.14), 0px 1px 5px 0px rgba(0,0,0,0.12);\n  min-width: 150px;\n  border-radius: 4px;\n  letter-spacing: 0.02857em;\n  text-transform: uppercase;\n  font-size: 14px;\n  margin-left: 0.5rem;\n\n  @media (max-width: 768px) {\n    width: 100%;\n    margin-top: 0.5rem;\n    margin-left: 0;\n  }\n`;\n\nexport default Button;\n","import styled from 'styled-components';\n\nconst FormVideo = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 1rem;\n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n\nexport default FormVideo;\n","import React, { useContext } from 'react';\nimport { get } from 'lodash';\nimport { useFormikContext } from 'formik';\nimport { Input } from '../form_inputs';\nimport Button from '../common/Button';\nimport VideosContext from '../../contexts/VideosContext';\nimport FormVideo from './FormVideo';\n\nconst FilterVideos = () => {\n  const { handleFilter, isFiltering } = useContext(VideosContext);\n  const { values, setFieldValue } = useFormikContext();\n\n  const FilterValues = () => {\n    if (isFiltering) {\n      setFieldValue('filter', '');\n    }\n    handleFilter(values);\n  };\n\n  return (\n    <FormVideo>\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"palavras-chave\"\n      />\n      <Button disabled={!get(values, 'filter', '')} type=\"button\" onClick={FilterValues}>\n        {isFiltering ? 'Limpar filtro' : 'Filtrar'}\n      </Button>\n    </FormVideo>\n  );\n};\n\nexport default FilterVideos;\n","import React, { useContext } from 'react';\nimport { useFormikContext } from 'formik';\nimport { Input } from '../form_inputs';\nimport Button from '../common/Button';\nimport VideosContext from '../../contexts/VideosContext';\nimport FormVideo from './FormVideo';\n\nconst SearchVideos = () => {\n  const { setFieldValue, values } = useFormikContext();\n  const {\n    isValueURL, isUrl, getVideos, loadingVideos,\n  } = useContext(VideosContext);\n\n  const urlVideoSearch = () => {\n    setFieldValue('search', '');\n    getVideos(values);\n  };\n\n  return (\n    <FormVideo>\n      <Input\n        onChange={isValueURL}\n        type=\"text\"\n        name=\"search\"\n        placeholder=\"link ou título do vídeo\"\n      />\n      {isUrl ? (\n        <Button\n          action=\"primary\"\n          type=\"button\"\n          onClick={urlVideoSearch}\n          disabled={loadingVideos}\n        >\n          Adicionar\n        </Button>\n      ) : (\n        <Button action=\"primary\" type=\"submit\" disabled={loadingVideos}>\n          Buscar\n        </Button>\n      )}\n    </FormVideo>\n  );\n};\n\nexport default SearchVideos;\n","import React, { useContext } from 'react';\nimport { PoseGroup } from 'react-pose';\nimport GridContainer from '../common/grid/GridContainer';\nimport VideoPlayer from '../common/video_player/VideoPlayer';\nimport VideosContext from '../../contexts/VideosContext';\nimport WarningMessage from '../common/WarningMessage';\nimport Loading from '../common/Loading';\n\nconst SelectedVideosList = () => {\n  const {\n    isPlaying, selectedVideos, handleRemoveVideo, handleVideo,\n    loadingVideos, isUrl,\n  } = useContext(VideosContext);\n\n  if (isUrl && loadingVideos) {\n    return (\n      <Loading />\n    );\n  }\n\n  if (selectedVideos.length === 0) {\n    return (\n      <WarningMessage>Nenhum vídeo adicionado. Pesquise seus vídeos favoritos</WarningMessage>\n    );\n  }\n\n  return (\n    <GridContainer\n      columns=\"2\"\n      className=\"mt-3\"\n    >\n      <PoseGroup animateOnMount>\n        {selectedVideos.map((selectedVideo, index) => (\n          <VideoPlayer\n            key={selectedVideo.id}\n            index={index + 1}\n            isPlaying={isPlaying}\n            video={selectedVideo}\n            onRemoveVideo={handleRemoveVideo}\n            onChangeVideoStatus={handleVideo}\n          />\n        ))}\n      </PoseGroup>\n    </GridContainer>\n  );\n};\n\nexport default SelectedVideosList;\n","import React, { useContext, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { ProfilePic, ProfileInfo } from '../components/common/Profile';\nimport { DataForm } from '../components/form_inputs';\nimport VideoModal from '../components/videos/VideoModal';\nimport ActionButton from '../components/common/ActionButton';\nimport { SelectedVideosList, SearchVideos, FilterVideos } from '../components/videos';\nimport VideosContext from '../contexts/VideosContext';\nimport Logo from '../assets/images/pelando-icon.png';\n\nconst VideosList = ({ history }) => {\n  const { getVideos } = useContext(VideosContext);\n  const [profile, setProfile] = useState({});\n\n  useEffect(() => {\n    setProfile(JSON.parse(localStorage.getItem('profile')));\n  }, []);\n\n  const logOut = () => {\n    localStorage.clear();\n    history.push('/login');\n  };\n\n  return (\n    <DataForm\n      onSubmit={getVideos}\n      className=\"container mx-auto p-4\"\n    >\n      <div className=\"flex justify-between items-center\">\n        <div className=\"flex items-center\">\n          <img src={Logo} width=\"50px\" className=\"mr-2\" alt=\"pelando-logo\" />\n          <h1 className=\"text-4xl\">Playando</h1>\n        </div>\n        <div className=\"flex items-center\">\n          <ProfilePic\n            src={profile.imageUrl}\n            alt=\"profile-pic\"\n            className=\"mr-3\"\n          />\n          <ProfileInfo>\n            <h2>{profile.name}</h2>\n            <small>{profile.email}</small>\n          </ProfileInfo>\n          <ActionButton type=\"button\" onClick={logOut}>\n            <FontAwesomeIcon icon=\"sign-out-alt\" />\n          </ActionButton>\n        </div>\n      </div>\n      <SearchVideos />\n      <hr className=\"mb-2 mt-2 border-orange-600 border-2\" />\n      <FilterVideos />\n      <SelectedVideosList />\n      <VideoModal />\n    </DataForm>\n  );\n};\n\nVideosList.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n};\n\nexport default withRouter(VideosList);\n","import {\n  SET_VIDEOS, SET_MODAL,\n  SET_IS_URL, SET_SELECTED_VIDEO,\n  REMOVE_SELECTED_VIDEO, SET_SELECTED_VIDEOS,\n  SET_VIDEOS_FILTER, SET_VIDEO_STATUS,\n  SET_VIDEO_LOADING,\n} from './types';\n\nconst VideosReducer = (state, action) => {\n  const { payload, type } = action;\n  const { selectedVideos, isVideosModalOpen } = state;\n\n  switch (type) {\n    case SET_VIDEOS:\n      return {\n        ...state,\n        videos: payload.items,\n        loadingVideos: false,\n      };\n\n    case SET_SELECTED_VIDEOS:\n      return {\n        ...state,\n        selectedVideos: payload,\n      };\n\n    case SET_MODAL:\n      return {\n        ...state,\n        isVideosModalOpen: !isVideosModalOpen,\n      };\n\n    case SET_IS_URL:\n      return {\n        ...state,\n        isUrl: payload,\n      };\n\n    case SET_SELECTED_VIDEO:\n      return {\n        ...state,\n        selectedVideos: [...selectedVideos, payload],\n        isUrl: false,\n      };\n\n    case REMOVE_SELECTED_VIDEO:\n      return {\n        ...state,\n        selectedVideos: selectedVideos.filter((selectedVideo) => selectedVideo.id !== payload),\n      };\n\n    case SET_VIDEOS_FILTER:\n      return {\n        ...state,\n        isFiltering: payload,\n      };\n\n    case SET_VIDEO_STATUS:\n      return {\n        ...state,\n        isPlaying: payload,\n      };\n\n    case SET_VIDEO_LOADING:\n      return {\n        ...state,\n        loadingVideos: payload,\n      };\n\n    default: return state;\n  }\n};\n\nexport default VideosReducer;\n","export const SET_VIDEOS = 'SET_VIDEOS';\nexport const SET_MODAL = 'SET_MODAL';\nexport const SET_IS_URL = 'SET_IS_URL';\nexport const SET_SELECTED_VIDEO = 'SET_SELECTED_VIDEO';\nexport const SET_SELECTED_VIDEOS = 'SET_SELECTED_VIDEOS';\nexport const REMOVE_SELECTED_VIDEO = 'REMOVE_SELECTED_VIDEO';\nexport const SET_VIDEOS_FILTER = 'SET_VIDEOS_FILTER';\nexport const SET_VIDEO_STATUS = 'SET_VIDEO_STATUS';\nexport const SET_VIDEO_LOADING = 'SET_VIDEO_LOADING';\n","export const API_HOST = 'https://www.googleapis.com/youtube/v3';\nexport const clientId = '1015749006092-v6s00reo7n6g74pbshn9t8m9mf0che12.apps.googleusercontent.com';\n","import axios from 'axios';\nimport { API_HOST } from '../utils';\n\nexport const fetchVideosSearch = async (params) => {\n  const res = await axios.get(`${API_HOST}/search`, { params });\n  return res.data;\n};\n\nexport const fetchVideos = async (params) => {\n  const res = await axios.get(`${API_HOST}/videos`, { params });\n  return res.data;\n};\n","import React, { useReducer, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { debounce, get } from 'lodash';\nimport VideosContext from '../contexts/VideosContext';\nimport VideosReducer from '../reducers/videos/VideosReducer';\nimport {\n  SET_VIDEOS, SET_VIDEO_STATUS, SET_IS_URL,\n  SET_SELECTED_VIDEO, REMOVE_SELECTED_VIDEO, SET_MODAL,\n  SET_SELECTED_VIDEOS,\n  SET_VIDEO_LOADING,\n  SET_VIDEOS_FILTER,\n} from '../reducers/videos/types';\nimport { fetchVideosSearch, fetchVideos } from '../services/GoogleApis';\n\nconst VideosState = ({ children, history }) => {\n  const initialState = {\n    isVideosModalOpen: false,\n    isUrl: false,\n    isFiltering: false,\n    loadingVideos: false,\n    isPlaying: null,\n    videos: [],\n    selectedVideos: [],\n  };\n\n  const [state, dispatch] = useReducer(VideosReducer, initialState);\n\n  const {\n    isVideosModalOpen,\n    videos,\n    loadingVideos,\n    isUrl,\n    selectedVideos,\n    isFiltering,\n    isPlaying,\n  } = state;\n\n  useEffect(() => {\n    const localStorageVideos = JSON.parse(localStorage.getItem('videos')) || [];\n    dispatch({ type: SET_SELECTED_VIDEOS, payload: localStorageVideos });\n  }, []);\n\n  const getVideos = async (values) => {\n    dispatch({ type: SET_VIDEO_LOADING, payload: true });\n    if (!isUrl) {\n      dispatch({ type: SET_MODAL });\n    }\n    try {\n      const token = localStorage.getItem('token');\n      const params = {\n        access_token: token,\n        token_type: 'Bearer',\n        expires_in: 3920,\n        scope: 'https://www.googleapis.com/auth/youtube, https://www.googleapis.com/auth/youtube.readonly, https://www.googleapis.com/auth/youtube.upload, https://www.googleapis.com/auth/youtubepartner-channel-audit',\n        q: values.search,\n        part: 'id, snippet',\n        maxResults: 4,\n      };\n      const videosData = await fetchVideosSearch(params);\n      const videosIds = videosData.items.map((item) => item.id.videoId);\n      const videosParams = {\n        access_token: token,\n        token_type: 'Bearer',\n        expires_in: 3920,\n        scope: 'https://www.googleapis.com/auth/drive.file',\n        id: videosIds.join(', '),\n        part: 'snippet, player',\n      };\n      const data = await fetchVideos(videosParams);\n      if (isUrl) {\n        if (selectedVideos.some((selectedVideo) => data.items[0].id === selectedVideo.id)) {\n          toast.warn('Opa! Você já adicionou esse vídeo');\n          dispatch({ type: SET_IS_URL, payload: false });\n        } else {\n          dispatch({ type: SET_SELECTED_VIDEO, payload: data.items[0] });\n          localStorage.setItem('videos', JSON.stringify([...selectedVideos, data.items[0]]));\n        }\n      } else {\n        dispatch({ type: SET_VIDEOS, payload: data });\n      }\n    } catch (error) {\n      if (!isUrl) {\n        dispatch({ type: SET_MODAL });\n      }\n      const { status } = error.response;\n      if (status === 401 || status === 403) {\n        toast.error('Suas credenciais não são validas. Faça login novamente.');\n        history.push('/login');\n      } else {\n        toast.error('Ocorreu um erro inesperado. Tente Novamente.');\n      }\n    }\n    dispatch({ type: SET_VIDEO_LOADING, payload: false });\n  };\n\n  const handleModal = () => {\n    dispatch({ type: SET_MODAL });\n  };\n\n  const isValueURL = debounce((value) => {\n    const regexp = /(ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-/]))?/;\n    dispatch({ type: SET_IS_URL, payload: regexp.test(value) });\n  }, 100);\n\n  const normalizeString = (value) => value.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '').toLowerCase();\n\n  const handleFilter = (values) => {\n    if (isFiltering) {\n      const localStorageVideos = JSON.parse(localStorage.getItem('videos'));\n      dispatch({ type: SET_SELECTED_VIDEOS, payload: localStorageVideos });\n      dispatch({ type: SET_VIDEOS_FILTER, payload: false });\n    } else {\n      const filteredVideos = selectedVideos.filter((selectedVideo) => (\n        normalizeString(get(selectedVideo, 'snippet.title', '')).split(' ').includes(...normalizeString(values.filter).split(' '))));\n      dispatch({ type: SET_SELECTED_VIDEOS, payload: filteredVideos });\n      dispatch({ type: SET_VIDEOS_FILTER, payload: true });\n    }\n  };\n\n  const handlePlay = () => {\n    dispatch({ type: SET_VIDEO_STATUS, payload: true });\n  };\n\n  const handlePause = () => {\n    dispatch({ type: SET_VIDEO_STATUS, payload: false });\n  };\n\n  const handleAddVideo = (video) => {\n    dispatch({ type: SET_SELECTED_VIDEO, payload: video });\n    localStorage.setItem('videos', JSON.stringify([...selectedVideos, video]));\n  };\n\n  const handleRemoveVideo = (video) => {\n    dispatch({ type: REMOVE_SELECTED_VIDEO, payload: video.id });\n    const removeSelectedVideo = selectedVideos.filter(\n      (selectedVideo) => selectedVideo.id !== video.id,\n    );\n    localStorage.setItem('videos', JSON.stringify(removeSelectedVideo));\n  };\n\n  const handleVideo = (videoId) => {\n    dispatch({ type: SET_VIDEO_STATUS, payload: videoId });\n  };\n\n  return (\n    <VideosContext.Provider\n      value={{\n        isVideosModalOpen,\n        videos,\n        isUrl,\n        selectedVideos,\n        isFiltering,\n        isPlaying,\n        loadingVideos,\n        handlePlay,\n        handlePause,\n        getVideos,\n        isValueURL,\n        handleAddVideo,\n        handleRemoveVideo,\n        handleVideo,\n        handleModal,\n        handleFilter,\n      }}\n    >\n      {children}\n    </VideosContext.Provider>\n  );\n};\n\nVideosState.propTypes = {\n  children: PropTypes.node.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n};\n\nexport default withRouter(VideosState);\n","import React from 'react';\nimport VideosList from '../containers/VideosList';\nimport VideosState from '../states/VideosState';\n\nconst VideosListPage = () => (\n  <VideosState>\n    <VideosList />\n  </VideosState>\n);\n\nexport default VideosListPage;\n","import { createGlobalStyle } from 'styled-components';\nimport { FontColor } from './Variables.style';\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    font-family: 'Open Sans', sans-serif;\n    font-color: ${FontColor};\n  }\n`;\n\nexport default GlobalStyle;\n","import React from 'react';\nimport {\n  BrowserRouter, Route, Switch, Redirect,\n} from 'react-router-dom';\nimport './config';\nimport { ToastContainer } from 'react-toastify';\nimport GoogleLoginPage from './pages/GoogleLoginPage';\nimport VideosListPage from './pages/VideosListPage';\nimport GlobalStyle from './assets/styles/global/GlobalStyles';\n\nconst App = () => (\n  <BrowserRouter>\n    <GlobalStyle />\n    <ToastContainer />\n    <Switch>\n      <Route exact path=\"/playando\" component={VideosListPage} />\n      <Route exact path=\"/login\" component={GoogleLoginPage} />\n      <Redirect to=\"/login\" />\n    </Switch>\n  </BrowserRouter>\n);\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/pelando.b49d27aa.png\";","module.exports = __webpack_public_path__ + \"static/media/pelando-icon.87658c72.png\";"],"sourceRoot":""}